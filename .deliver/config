#!/usr/bin/env bash

APP="clock"
#AUTO_VERSION=revision
#AUTO_VERSION=mix-env+git-branch+git-revision+commit-count
#   fast builds
#SKIP_GIT_CLEAN="true"
#SKIP_MIX_CLEAN="true"
# prevent re-installing node modules; this defaults to "."
#GIT_CLEAN_PATHS="_build rel priv/static"

BUILD_HOST="i3"
BUILD_USER="zoomq"
BUILD_AT="/opt/tmp/beta/$APP"
#RELEASE_DIR="$BUILD_AT/_build/prod/rel/$APP"

#STAGING_HOSTS="i3" # staging / test hosts separated by space
#STAGING_USER="zoomq" # local user at staging hosts
#TEST_AT="/opt/apps/dev" # deploy directory on staging hosts. default is DELIVER_TO

PRODUCTION_HOSTS="i3" # deploy / production hosts separated by space
PRODUCTION_USER="zoomq" # local user at deploy hosts
DELIVER_TO="/opt/apps/beta" # deploy directory on production hosts

pre_init_app_remotely() {
  # store current value to be able to restore it later
  ACTUAL_PROJECT_DIR="$DELIVER_TO"
  # set the build directory to the parent directory of the
  # app (sub) directory for git operations
  DELIVER_TO="$(dirname $DELIVER_TO)"
  # repeat that for each subdir-level
}

pre_erlang_get_and_update_deps() {
 # restore build directory including subdir for building
 DELIVER_TO="$ACTUAL_PROJECT_DIR" 
}

# For *Phoenix* projects, symlink prod.secret.exs to our tmp source
#pre_erlang_get_and_update_deps() {
#  local _prod_secret_path="/opt/srv/builder/prod.secret.exs"
#  if [ "$TARGET_MIX_ENV" = "prod" ]; then
#    __sync_remote "
#      ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'
#    "
#  fi
#}